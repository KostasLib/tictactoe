{"version":3,"sources":["music.mp3","gameover.mp3","refresh.svg","volume-on.svg","volume-off.svg","Components.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","props","className","Board","squares","onClick","map","s","i","mark","Mark","calculateWinner","lines","length","a","b","c","audioSources","suspense","gameovermusic","App","deferredInstallPrompt","useState","isWelcome","setIsWelcome","promptInstallApp","e","preventDefault","window","matchMedia","matches","navigator","standalone","prompt","srcElement","setAttribute","userChoice","outcome","console","log","useEffect","addEventListener","removeEventListener","WelcomeScreen","onStartGame","Game","onExitGame","initialSquares","Array","fill","setSquares","xIsNext","setXIsNext","audioSource","setAudioSource","isGameEnded","setIsGameEnded","isMusicPlaying","setIsMusicPlaying","startGame","filter","v","src","refresh","alt","volumeOn","volumeOff","newState","handleClick","style","visibility","role","aria-label","autoPlay","loop","controls","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20b43634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.e15c5d19.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gameover.693ff6e7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/refresh.8cde2f6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume-on.e6445464.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume-off.3f8924a4.svg\";","import React from \"react\";\r\n\r\nconst Square = props => <div className=\"Square\" {...props} />;\r\n\r\nexport const Board = ({ squares, onClick }) => (\r\n  <div className=\"Board\">\r\n    {squares.map((s, i) => (\r\n      <Square onClick={() => onClick(i)}>{s && <Mark mark={s} />}</Square>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport const Mark = ({ mark }) => (\r\n  <div className={mark === \"X\" ? \"XMark\" : \"OMark\"}>\r\n    {mark}\r\n  </div>\r\n);\r\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport suspense from \"./music.mp3\";\nimport gameovermusic from \"./gameover.mp3\";\nimport refresh from \"./refresh.svg\";\nimport volumeOn from \"./volume-on.svg\";\nimport volumeOff from \"./volume-off.svg\";\nimport { Board } from \"./Components\";\nimport { calculateWinner } from \"./utils\";\nconst audioSources = {\n  suspense: suspense,\n  gameovermusic: gameovermusic\n};\n\nfunction App() {\n  // Which screen to show\n  const [isWelcome, setIsWelcome] = useState(true);\n  const startGame = () => setIsWelcome(false);\n  const exitGame = () => setIsWelcome(true);\n\n  // Show install button\n  let deferredInstallPrompt;\n  async function promptInstallApp(e) {\n    e.preventDefault();\n    deferredInstallPrompt = e;\n\n    if (\n      (window.matchMedia &&\n        window.matchMedia(\"(display-mode: standalone)\").matches) ||\n      window.navigator.standalone === true\n    )\n      return false;\n\n    // Prompt\n    if (!deferredInstallPrompt) return;\n    deferredInstallPrompt.prompt();\n    e.srcElement.setAttribute(\"hidden\", true);\n    const choice = await deferredInstallPrompt.userChoice;\n    if (choice.outcome === \"accepted\") console.log(\"App installed\");\n    else console.log(\"App not installed\");\n\n    deferredInstallPrompt = e;\n  }\n  useEffect(() => {\n    window.addEventListener(\"beforeinstallprompt\", promptInstallApp);\n    return () =>\n      window.removeEventListener(\"beforeinstallprompt\", promptInstallApp);\n  });\n\n  // Render\n  if (isWelcome) return <WelcomeScreen onStartGame={startGame} />;\n  return <Game onExitGame={exitGame} />;\n}\n\nexport default App;\n\nfunction WelcomeScreen({ onStartGame }) {\n  return (\n    <div className=\"App\">\n      <h1 className=\"GameLogo\">\n        <span className=\"Tic\">Tic</span>\n        <span className=\"Tac\">Tac</span>\n        <span className=\"Toe\">Toe</span>\n      </h1>\n      <div className=\"PlayButton\" onClick={onStartGame}>\n        PLAY\n      </div>\n    </div>\n  );\n}\n\nfunction Game({ onExitGame }) {\n  const initialSquares = Array(9).fill(null);\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [audioSource, setAudioSource] = useState(audioSources.suspense);\n  const [isGameEnded, setIsGameEnded] = useState(false);\n  const [isMusicPlaying, setIsMusicPlaying] = useState(true);\n  function endGame() {\n    setIsGameEnded(true);\n    setAudioSource(audioSources.gameovermusic);\n  }\n  function startGame() {\n    setIsGameEnded(false);\n    setAudioSource(audioSources.suspense);\n    setSquares(initialSquares);\n    setXIsNext(true);\n  }\n\n  const toggleMusic = () => setIsMusicPlaying(!isMusicPlaying);\n  useEffect(() => {\n    if (\n      calculateWinner(squares) ||\n      squares.filter(v => v !== null).length === 9\n    )\n      return endGame();\n  }, [squares]);\n\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) return;\n\n    const newState = [...squares];\n    newState[i] = xIsNext ? \"X\" : \"O\";\n\n    setSquares(newState);\n    setXIsNext(!xIsNext);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"Header\">\n        <div className=\"Exit\" onClick={onExitGame}>\n          EXIT\n        </div>\n\n        <div className=\"Controls\">\n          <div className=\"ControlsIcon Refresh\" onClick={startGame}>\n            <img src={refresh} alt=\"\" className=\"ControlsImage RefreshImage\" />\n          </div>\n          <div className=\"ControlsIcon Volume\" onClick={toggleMusic}>\n            <img\n              src={isMusicPlaying ? volumeOn : volumeOff}\n              alt=\"\"\n              className=\"ControlsImage\"\n            />\n          </div>\n        </div>\n      </header>\n      <h1>\n        {calculateWinner(squares)\n          ? `Player ${calculateWinner(squares)} won!`\n          : `Next Player: ${xIsNext ? \"X\" : \"O\"}`}\n      </h1>\n      <Board squares={squares} onClick={i => handleClick(i)} />\n      <div\n        className=\"GameEnd\"\n        style={{ visibility: isGameEnded ? \"visible\" : \"hidden\" }}\n      >\n        <div className=\"game-over\">\n          Game Over!\n          <span role=\"img\" aria-label=\"smile\">\n            😊\n          </span>\n        </div>\n        <div className=\"PlayAgain\" onClick={startGame}>\n          Play Again\n        </div>\n      </div>\n      {isMusicPlaying && (\n        <audio src={audioSource} autoPlay loop controls={false} />\n      )}\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}